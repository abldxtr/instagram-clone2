import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { GlobalProvider } from "@/context/globalContext";
import { Toaster } from "@/components/ui/toaster";
import { SessionProvider } from "next-auth/react";
import { auth } from "@/auth";
import { headers } from "next/headers";
import classNames from "classnames";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
});

export const metadata: Metadata = {
  title: "Instagram clone",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();

  const headersList = headers();
  const domain = headersList.get("host") || "";
  const fullUrl = headersList.get("referer") || "";
  const [, pathname] =
    fullUrl.match(new RegExp(`https?:\/\/${domain}(.*)`)) || [];

  console.log(pathname);
  const path = ["/login", "/register"];
  const cond = path.includes(pathname);

  // console.log(fullUrl.split("/")[-1]);

  return (
    <SessionProvider session={session}>
      <html lang="en">
        <GlobalProvider>
          <body
            className={classNames(
              geistSans.variable,
              geistMono.variable,
              cond && "bg-black"
            )}
          >
            {children}
            <Toaster />
          </body>
        </GlobalProvider>
      </html>
    </SessionProvider>
  );
}
